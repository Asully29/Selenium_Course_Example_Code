<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="1" name="pytest" skips="0" tests="3" time="4.051"><testcase classname="tests.login_test" file="tests/login_test.py" line="19" name="test_forced_failure" time="3.26891088486"><failure message="login = &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;

    @pytest.mark.shallow
    def test_forced_failure(login):
        login._with(&quot;tomsmith&quot;, &quot;bad password&quot;)
&gt;       assert login.success_message_present()
E       assert &lt;bound method LoginPage.success_message_present of &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;&gt;()
E        +  where &lt;bound method LoginPage.success_message_present of &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;&gt; = &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;.success_message_present

tests/login_test.py:23: AssertionError">login = &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;

    @pytest.mark.shallow
    def test_forced_failure(login):
        login._with(&quot;tomsmith&quot;, &quot;bad password&quot;)
&gt;       assert login.success_message_present()
E       assert &lt;bound method LoginPage.success_message_present of &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;&gt;()
E        +  where &lt;bound method LoginPage.success_message_present of &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;&gt; = &lt;pages.login_page.LoginPage instance at 0x10c06f9e0&gt;.success_message_present

tests/login_test.py:23: AssertionError</failure></testcase><testcase classname="tests.login_test" file="tests/login_test.py" line="13" name="test_invalid_credentials" time="3.48410367966"></testcase><testcase classname="tests.login_test" file="tests/login_test.py" line="8" name="test_valid_credentials" time="3.62346220016"></testcase></testsuite>